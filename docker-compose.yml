version: '3.9'

services:
  # Spring Boot Application
  configcat-demo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: configcat-demo-app
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "5005:5005" # Debug port
    environment:
      # Spring profiles
      SPRING_PROFILES_ACTIVE: local
      
      # ConfigCat SDK Keys (replace with your actual keys)
      CONFIGCAT_USER_MANAGEMENT_SDK_KEY: "PKDVCLf-Hq-h-kCzMp-L7Q/YOUR_USER_MANAGEMENT_SDK_KEY"
      CONFIGCAT_PAYMENT_SDK_KEY: "PKDVCLf-Hq-h-kCzMp-L7Q/YOUR_PAYMENT_SDK_KEY"
      
      # JVM Debug options
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
      
      # Logging
      LOGGING_LEVEL_COM_EXAMPLE_CONFIGCAT: DEBUG
      LOGGING_LEVEL_COM_CONFIGCAT: DEBUG
    volumes:
      - ./logs:/app/logs
      - ./tmp:/tmp
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - configcat-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - configcat-demo
    networks:
      - configcat-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - configcat-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  configcat-network:
    driver: bridge